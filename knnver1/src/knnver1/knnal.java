/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package knnver1;

/**
 *
 * @author ricardo
 */

import java.awt.Graphics;
import java.awt.Color;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.util.ArrayList;

public class knnal extends javax.swing.JFrame {

    /**
     * Creates new form knnal
     */
    protected ArrayList<Integer> X = new ArrayList<Integer>();
    protected ArrayList<Integer> Y = new ArrayList<Integer>();
    ArrayList<Integer> color = new ArrayList<Integer>();
    int centro = 0;
    int centroY = 0;
    int centroX = 0;
    
    MouseListener m = new MouseListener(){

        @Override
        public void mouseClicked(MouseEvent e) {
           X.add(e.getX()+centro);
           Y.add(e.getY()+33);
           color.add(Vecinos(Integer.parseInt(jComboBox1.getSelectedItem().toString()),e.getX()+centro,e.getY()+33));
           repaint();
        }

        @Override
        public void mousePressed(MouseEvent e) {
            
        }

        @Override
        public void mouseReleased(MouseEvent e) {
            
        }

        @Override
        public void mouseEntered(MouseEvent e) {
           
        }

        @Override
        public void mouseExited(MouseEvent e) {
            
        }
        
    };
    
    public knnal() {
        initComponents();
        centro = this.getWidth()-jPanel1.getWidth()-10;
        centroY = this.getHeight()/2;
        centroX = (this.getWidth()+centro)/2;
        jPanel1.addMouseListener(m);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        btnlimpiar = new javax.swing.JButton();
        btnpintar = new javax.swing.JButton();
        jComboBox1 = new javax.swing.JComboBox();
        jPanel1 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setText("No. puntos");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 30, -1, -1));

        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });
        getContentPane().add(jTextField1, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 30, 68, -1));

        btnlimpiar.setText("Limpiar");
        btnlimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnlimpiarActionPerformed(evt);
            }
        });
        getContentPane().add(btnlimpiar, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 160, -1, -1));

        btnpintar.setText("Pintar puntos");
        btnpintar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnpintarActionPerformed(evt);
            }
        });
        getContentPane().add(btnpintar, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 70, -1, -1));

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "1", "2", "3", "4", "5" }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });
        getContentPane().add(jComboBox1, new org.netbeans.lib.awtextra.AbsoluteConstraints(61, 324, -1, -1));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setPreferredSize(new java.awt.Dimension(624, 0));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 470, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(214, 0, 470, 436));

        jButton1.setText("Salir");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 220, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnlimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnlimpiarActionPerformed
        // TODO add your handling code here:
        X.clear();
        Y.clear();
        repaint();
    }//GEN-LAST:event_btnlimpiarActionPerformed

    private void btnpintarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnpintarActionPerformed
        // TODO add your handling code here:

        int N = Integer.parseInt(jTextField1.getText());
        for(int i=0; i<N; i++){
            X.add((int)(Math.random()*centroX+centro));
            Y.add((int)(Math.random()*this.getHeight()+4));
            color.add((int)(Math.random()*3+1));

        }
        repaint();

    }
    
    public void paint(Graphics g){
        super.paint(g);
        funciones func = new funciones();

        g.setColor(Color.BLACK);
        g.drawLine(centro,centroY, this.getWidth(),centroY);
        g.drawLine(centroX,0,centroX,this.getWidth());

        for (int i =0; i < this.getHeight(); i+=10) {
            g.drawLine(centroX-10,i, centroX+10,i);
        }
        for (int i =centro; i < this.getWidth(); i+=10) {
            g.drawLine(i,centroY-10,i,centroY+10);
        }
        g.setColor(Color.red);
        if(!X.isEmpty()){
        }
        for(int i=0; i<X.size(); i++){
            g.drawLine(X.get(i)-5,Y.get(i),X.get(i)+5,Y.get(i));
            g.drawLine(X.get(i),Y.get(i)-5,X.get(i),Y.get(i)+5);

        }
        g.setColor(Color.GRAY);
        if(!X.isEmpty()){          
            
            func.colores(g,X,Y,color);
            
        }
    }//GEN-LAST:event_btnpintarActionPerformed

    public int Vecinos(int m, int p, int t){        
        double linea =0;
        double h=0;
        int br=0;
        Double [] n = new Double[m];
        Integer [] ab = new Integer [m];
        switch (m){
            case 1:
                System.out.println("valor de m = "+m);
                for(int i = 0; i < m ;i++){
                    n[i]=Math.sqrt((Math.pow((X.get(i)-p),2))+(Math.pow((Y.get(i)-t),2)));
                    ab[i]=color.get(i);
                    for(int j=m;j<X.size()-1;j++){
                    linea=Math.sqrt((Math.pow((X.get(j)-p),2))+(Math.pow((Y.get(j)-t),2)));
                    if(n[i]>=linea){
                       n[i]=linea;
                       ab[i]=color.get(j);

                    }
                }
                }
                
                
            break;

            case 2:
                System.out.println("valor de m = "+m);
                for(int a =0 ;a <m ;a++){
                    n[a]=Math.sqrt((Math.pow((X.get(a)-p),2))+(Math.pow((Y.get(a)-t),2)));
                    //n[1]=Math.sqrt((Math.pow((X.get(1)-p),2))+(Math.pow((Y.get(1)-t),2)));
                    ab[a]=color.get(a);
                    //ab[1]=color.get(0);
                }
                
                for(int i=m;i<X.size()-1;i++){
                    linea=Math.sqrt((Math.pow((X.get(i)-p),2))+(Math.pow((Y.get(i)-t),2)));
                    if(n[0]>=linea){
                       n[0]=linea;
                       ab[0]=color.get(i);

                    }
                    for(int j=0;j<m-1;j++){
                         for(int k=j+1; k<m;k++){
                             if(n[j]<n[k]){
                                 h=n[j];
                                 n[j]=n[k];
                                 n[k]=h;
                                 br=ab[j];
                                 ab[j]=ab[k];
                                 ab[k]=br;
                             }
                         }
                    }
                }

                break;

            case 3:
                System.out.println("valor de m = "+m);
                for(int a =0 ;a <m ;a++){
                    n[a]=Math.sqrt((Math.pow((X.get(a)-p),2))+(Math.pow((Y.get(a)-t),2)));
                    //n[1]=Math.sqrt((Math.pow((X.get(1)-p),2))+(Math.pow((Y.get(1)-t),2)));
                    ab[a]=color.get(a);
                    //ab[1]=color.get(0);
                }
                for(int i=m;i<X.size()-1;i++){
                    linea=Math.sqrt((Math.pow((X.get(i)-p),2))+(Math.pow((Y.get(i)-t),2)));
                    if(n[0]>=linea){
                       n[0]=linea;
                       ab[0]=color.get(i);
                    }
                        for(int j=0;j<m-1;j++){
                         for(int k=j+1; k<m;k++){
                             if(n[j]<n[k]){
                                 h=n[j];
                                 n[j]=n[k];
                                 n[k]=h;
                                 br=ab[j];
                                 ab[j]=ab[k];
                                 ab[k]=br;
                             }
                         }
                    }
                }
                break; 

            case 4:
                System.out.println("valor de m = "+m);
                for(int a =0 ;a <m ;a++){
                    n[a]=Math.sqrt((Math.pow((X.get(a)-p),2))+(Math.pow((Y.get(a)-t),2)));
                    //n[1]=Math.sqrt((Math.pow((X.get(1)-p),2))+(Math.pow((Y.get(1)-t),2)));
                    ab[a]=color.get(a);
                    //ab[1]=color.get(0);
                }
                for(int i=m;i<X.size()-1;i++){
                    linea=Math.sqrt((Math.pow((X.get(i)-p),2))+(Math.pow((Y.get(i)-t),2)));
                    if(n[0]>=linea){
                       n[0]=linea;
                       ab[0]=color.get(i); 
                    }
                        for(int j=0;j <m-1;j++){
                         for(int k=j+1; k<m;k++){
                             if(n[j]<n[k]){
                                 h=n[j];
                                 n[j]=n[k];
                                 n[k]=h;
                                 br=ab[j];
                                 ab[j]=ab[k];
                                 ab[k]=br;
                             }
                         }
                    }
                }
                break;
            case 5:
                System.out.println("valor de m = "+m);
                for(int a =0 ;a <m ;a++){
                    n[a]=Math.sqrt((Math.pow((X.get(a)-p),2))+(Math.pow((Y.get(a)-t),2)));
                    //n[1]=Math.sqrt((Math.pow((X.get(1)-p),2))+(Math.pow((Y.get(1)-t),2)));
                    ab[a]=color.get(a);
                    //ab[1]=color.get(0);
                }
                for(int i=m;i<X.size()-1;i++){
                    linea=Math.sqrt((Math.pow((X.get(i)-p),2))+(Math.pow((Y.get(i)-t),2)));
                    if(n[0]>=linea){
                       n[0]=linea;
                       ab[0]=color.get(i);
                    }
                        for(int j=0;j<m-1;j++){
                         for(int k=j+1; k<m;k++){
                             if(n[j]<n[k]){
                                 h=n[j];
                                 n[j]=n[k];
                                 n[k]=h;
                                 br=ab[j];
                                 ab[j]=ab[k];
                                 ab[k]=br;
                             }
                         }
                    }
                }
                break;

        }
     
        int n1 = 0, n2 = 0, n3 = 0;

        for (int i = 0; i < m; i++) {
            switch (ab[i]) {
                case 1:
                n1++;
                    break;
                case 2:
                n2++;
                    break;
                default:
                n3++;
                    break;
            }
        }
        if (n1 > n2 && n1 > n2) {
                 return 1;
            } else if (n2 > n1 && n2 > n3) {
            return 2;
            } else {
            return 3;
        }
     
    }

       
    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(knnal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(knnal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(knnal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(knnal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new knnal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnlimpiar;
    private javax.swing.JButton btnpintar;
    private javax.swing.JButton jButton1;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
}
